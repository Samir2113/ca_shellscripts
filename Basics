1) Hello, World!:

#!/bin/bash
# Text to the right of a '#' is treated as a comment - below is the shell command
echo 'Hello, World!'

----------------------------------------------------------------------------------



2) Variables:

#!/bin/bash
# Change this code
BIRTHDATE="Jan 1, 2000"
Presents=10
BIRTHDAY=$(date -d "$BIRTHDATE" +%A)



# Testing code - do not change it

if [ "$BIRTHDATE" == "Jan 1, 2000" ] ; then
    echo "BIRTHDATE is correct, it is $BIRTHDATE"
else
    echo "BIRTHDATE is incorrect - please retry"
fi
if [ $Presents == 10 ] ; then
    echo "I have received $Presents presents"
else
    echo "Presents is incorrect - please retry"
fi
if [ "$BIRTHDAY" == "Saturday" ] ; then
    echo "I was born on a $BIRTHDAY"
else
    echo "BIRTHDAY is incorrect - please retry"
fi

----------------------------------------------------------------------------------



3) Passing Arguments to the Script:

#!/bin/bash
function File {
    # think you are inside the file
    # Change here
    echo $#
}

# Do not change anything
if [ ! $# -lt 1 ]; then
    File $*
    exit 0
fi

# change here
# here you can pass the arguments
bash prog.sh Shell is fun

----------------------------------------------------------------------------------



4) Arrays:

#!/bin/bash
NAMES=( John Eric Jessica )
# write your code here
NUMBERS=(1 2 3)
STRINGS=('hello' 'world')
NumberOfNames=${#NAMES[@]}
second_name=${NAMES[1]}

echo ${NUMBERS[@]}
echo ${STRINGS[@]}
echo "The number of names listed in the NAMES array: $NumberOfNames"
echo "The second name on the NAMES list is: $second_name"

----------------------------------------------------------------------------------



5) Basic Operators:

#!/bin/bash 

COST_PINEAPPLE=50

COST_BANANA=4

COST_WATERMELON=23

COST_BASKET=1

TOTAL=$(( $COST_BASKET + $COST_PINEAPPLE + (2 * $COST_BANANA) + (3 * $COST_WATERMELON)))

echo "Total Cost is $TOTAL" 

----------------------------------------------------------------------------------



6) Basic String Operations:

#!/bin/bash

BUFFETT="Life is like a snowball. The important thing is finding wet snow and a really long hill."
# write your code here
ISAY=$BUFFETT
CHANGE1=${ISAY[@]/snow/foot}
CHANGE2=${CHANGE1[@]// snow/}
CHANGE3=${CHANGE2[@]/finding/getting}
WET=`expr index "$CHANGE3" "w"`+3
ISAY=${CHANGE3::$WET}


# Test code - do not modify
echo "Warren Buffett said:"
echo $BUFFETT
echo "and I say:"
echo $ISAY

----------------------------------------------------------------------------------



7) Decision Making:

#!/bin/bash
# change these variables
NUMBER=16
APPLES=16
KING=LUIS
# modify above variables
# to make all decisions below TRUE
if [ $NUMBER -gt 15 ] ; then
  echo 1
fi
if [ $NUMBER -eq $APPLES ] ; then
  echo 2
fi
if [[ ($APPLES -eq 12) || ("$KING" = "LUIS") ]] ; then
  echo 3
fi
if [[ $(($NUMBER + $APPLES)) -le 32 ]] ; then
  echo 4
fi

----------------------------------------------------------------------------------



8) Loops:

#!/bin/bash
NUMBERS=(951 402 984 651 360 69 408 319 601 485 980 507 725 547 544 615 83 165 141 501 263 617 865 575 219 390 237 412 566 826 248 866 950 626 949 687 217 815 67 104 58 512 24 892 894 767 553 81 379 843 831 445 742 717 958 609 842 451 688 753 854 685 93 857 440 380 126 721 328 753 470 743 527)

for N in ${NUMBERS[@]}; do
    even=$(($N % 2))
    if [ "$even" = 0 ]; then
    	echo $N
    elif [ $N = 237 ]; then
    	break
    fi
done
----------------------------------------------------------------------------------



9) Array-Comparison:

#!/bin/bash
# enter your array comparison code here
    
a=(3 5 8 10 6)
b=(6 5 4 12)
c=(14 7 5 7)
    
#compare a to b:
    
for x in ${a[@]}; do
    for y in ${b[@]}; do
    	if [ $x -eq $y ]; then
            d[${#d[@]}]=$x
        fi
    done
done
    
    
#compare d to c:
    
for x in ${d[@]}; do
    for y in ${c[@]}; do
        if [ $x -eq $y ]; then
            echo $x
        fi
    done
done

----------------------------------------------------------------------------------



10) Shell Functions:

#!/bin/bash
# enter your function code here

 function ENGLISH_CALC {

    result=0
    ope=$2
	
    if [ $ope = "plus" ]; then
    	result=$(($1 + $3))
        ope=+
    elif [ $ope = "minus" ]; then
    	result=$(($1 - $3))
        ope=-
    elif [ $ope = "times" ]; then
    	result=$(($1 * $3))
        ope=*
    fi
    
    echo "$1 $ope $3 = $result"
 }

# testing code
ENGLISH_CALC 3 plus 5
ENGLISH_CALC 5 minus 1
ENGLISH_CALC 4 times 6
